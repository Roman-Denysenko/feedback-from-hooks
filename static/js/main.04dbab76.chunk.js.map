{"version":3,"sources":["components/statistics/Statistics.module.css","components/buttons/Buttons.module.css","components/notification/Notification.module.css","components/section/section.js","components/buttons/buttons.js","components/notification/notification.js","components/statistics/statistics.js","App.js","index.js"],"names":["module","exports","Section","title","children","Buttons","options","onLeaveFeedback","Object","keys","map","item","type","className","s","buttons","onClick","uuidv4","Notification","message","Statistics","good","neutral","bad","total","positivePercentage","reviews","App","useState","setGood","setNeutral","setBad","countTotalFeedback","feedback","prevState","positiveFeedbackPercentage","Number","toFixed","countPositiveFeedbackPercentage","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mHACAA,EAAOC,QAAU,CAAC,QAAU,8B,mBCA5BD,EAAOC,QAAU,CAAC,QAAU,2B,gBCA5BD,EAAOC,QAAU,CAAC,QAAU,gC,qHCebC,EAbC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,oCACE,6BAAKD,IACJC,M,wBCyBQC,EA1BC,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAkB1B,OAjByBC,OAAOC,KAAKH,GAiBbI,KAfJ,SAAAC,GAGlB,OACE,wBAEEC,KAAK,SACLC,UAAWC,IAAEC,QACbC,QAPY,kBAAMT,EAAgB,GAAD,OAAII,KAGvC,SAMGA,GALIM,mB,gBCDEC,EARM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAO,mBAAGN,UAAWC,IAAEK,QAAhB,SAA0BA,K,gBCkCpBC,EAjCI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OAAc,IAAVD,EACK,cAAC,EAAD,CAAcL,QAAQ,sBAG7B,oCACE,oBAAGN,UAAWC,IAAEY,QAAhB,mBACQ,+BAAOL,OAEf,oBAAGR,UAAWC,IAAEY,QAAhB,sBACW,+BAAOJ,OAElB,oBAAGT,UAAWC,IAAEY,QAAhB,kBACO,+BAAOH,OAEd,oBAAGV,UAAWC,IAAEY,QAAhB,oBACS,+BAAOF,OAEhB,oBAAGX,UAAWC,IAAEY,QAAhB,gCACqB,iCAAOD,EAAP,eCmCZE,EAvDH,WAAO,IAAD,EACQC,mBAAS,GADjB,mBACTP,EADS,KACHQ,EADG,OAEcD,mBAAS,GAFvB,mBAETN,EAFS,KAEAQ,EAFA,OAGMF,mBAAS,GAHf,mBAGTL,EAHS,KAGJQ,EAHI,KAyBVC,EAAqB,WACzB,OAAOX,EAAOC,EAAUC,GAU1B,OACE,0BAASV,UAAU,YAAnB,UACE,cAAC,EAAD,CAASV,MAAM,wBAAf,SACE,cAAC,EAAD,CACEG,QAAS,CAAEe,OAAMC,UAASC,OAC1BhB,gBApCgB,SAAA0B,GACL,SAAbA,GACFJ,GAAQ,SAAAK,GACN,OAAOA,EAAY,KAIN,YAAbD,GACFH,GAAW,SAAAI,GACT,OAAOA,EAAY,KAIN,QAAbD,GACFF,GAAO,SAAAG,GACL,OAAOA,EAAY,UAwBrB,cAAC,EAAD,CACEb,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOQ,IACPP,mBApBkC,WACtC,IAAMU,EAA6BC,QAC/Bf,EAAOW,IAAwB,KAAKK,QAAQ,IAEhD,OAAOF,EAA6B,EAAIA,EAA6B,EAgB7CG,SClD5BC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.04dbab76.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"reviews\":\"Statistics_reviews__oPNu7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttons\":\"Buttons_buttons__pTyed\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Notification_message__2Lhll\"};","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Section = ({ title, children }) => {\n  return (\n    <section>\n      <h1>{title}</h1>\n      {children}\n    </section>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string,\n};\n\nexport default Section;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport s from './Buttons.module.css';\n\nconst Buttons = ({ options, onLeaveFeedback }) => {\n  const arrayKeysOptions = Object.keys(options);\n\n  const ButtonsItem = item => {\n    const onClick = () => onLeaveFeedback(`${item}`);\n\n    return (\n      <button\n        key={uuidv4()}\n        type=\"button\"\n        className={s.buttons}\n        onClick={onClick}\n      >\n        {item}\n      </button>\n    );\n  };\n\n  return arrayKeysOptions.map(ButtonsItem);\n};\n\nButtons.propTypes = {\n  options: PropTypes.objectOf(PropTypes.number),\n  onLeaveFeedback: PropTypes.func,\n};\n\nexport default Buttons;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport s from './Notification.module.css';\n\nconst Notification = ({ message }) => {\n  return <p className={s.message}>{message}</p>;\n};\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default Notification;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Notification from '../notification';\n\nimport s from './Statistics.module.css';\n\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\n  if (total === 0) {\n    return <Notification message=\"No feedback given\" />;\n  }\n  return (\n    <section>\n      <p className={s.reviews}>\n        Good: <span>{good}</span>\n      </p>\n      <p className={s.reviews}>\n        Neutral: <span>{neutral}</span>\n      </p>\n      <p className={s.reviews}>\n        Bad: <span>{bad}</span>\n      </p>\n      <p className={s.reviews}>\n        Total: <span>{total}</span>\n      </p>\n      <p className={s.reviews}>\n        Positive feedback: <span>{positivePercentage} %</span>\n      </p>\n    </section>\n  );\n};\n\nStatistics.propTypes = {\n  good: PropTypes.number,\n  neutral: PropTypes.number,\n  bad: PropTypes.number,\n  total: PropTypes.number,\n  positivePercentage: PropTypes.number,\n};\n\nexport default Statistics;\n","import React, { useState } from 'react';\n\nimport Section from './components/section';\nimport Buttons from './components/buttons';\nimport Statistics from './components/statistics';\n\nconst App = () => {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const onLeaveFeedback = feedback => {\n    if (feedback === 'good') {\n      setGood(prevState => {\n        return prevState + 1;\n      });\n    }\n\n    if (feedback === 'neutral') {\n      setNeutral(prevState => {\n        return prevState + 1;\n      });\n    }\n\n    if (feedback === 'bad') {\n      setBad(prevState => {\n        return prevState + 1;\n      });\n    }\n  };\n\n  const countTotalFeedback = () => {\n    return good + neutral + bad;\n  };\n\n  const countPositiveFeedbackPercentage = () => {\n    const positiveFeedbackPercentage = Number(\n      ((good / countTotalFeedback()) * 100).toFixed(0),\n    );\n    return positiveFeedbackPercentage > 0 ? positiveFeedbackPercentage : 0;\n  };\n\n  return (\n    <section className=\"container\">\n      <Section title=\"Please leave feedback\">\n        <Buttons\n          options={{ good, neutral, bad }}\n          onLeaveFeedback={onLeaveFeedback}\n        />\n      </Section>\n      <Statistics\n        good={good}\n        neutral={neutral}\n        bad={bad}\n        total={countTotalFeedback()}\n        positivePercentage={countPositiveFeedbackPercentage()}\n      />\n    </section>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}